/**
 * â˜” Arisu: Translation made with simplicity, yet robust.
 * Copyright (C) 2020-2021 Noelware
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// This file was generated using the `yarn generate` command.
// Do not edit this file yourself. It was generated on 17:23:44 GMT-0700 (Mountain Standard Time).

export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export interface Scalars {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
}

/** Object for creating new projects with the GraphQL API. */
export interface CreateProjectInput {
  /** Sets the project's description, if any. */
  description?: Maybe<Scalars['String']>;
  /** Sets the project's base language to use when translating. */
  language?: Maybe<Scalars['String']>;
  /** Sets the project's name. */
  name: Scalars['String'];
}

export interface CreateUserInput {
  /** Returns the email the user is going to use. */
  email: Scalars['String'];
  /** Returns the user's password they want to use. */
  password: Scalars['String'];
  /** Returns the user's username to signup. */
  username: Scalars['String'];
}

export interface ErrorType {
  __typename?: 'ErrorType';
  message: Scalars['String'];
  name: Scalars['String'];
}

export interface LoginResult {
  __typename?: 'LoginResult';
  /** Returns the list of validation errors, if any. */
  errors?: Maybe<ErrorType[]>;
  /** Returns if the operation was successful or not. */
  success: Scalars['Boolean'];
  token: Scalars['String'];
}

export interface Mutation {
  __typename?: 'Mutation';
  /** Creates a new project as the owner being the current authenticated user. */
  createProject?: Maybe<Project>;
  /** Creates a user and registers them to the database. */
  createUser: User;
  /** Deletes a project from the database and it's files in storage. */
  deleteProject: Scalars['Boolean'];
  deleteUser: Scalars['Boolean'];
  /** Returns the result of the operation. */
  login: LoginResult;
  logout: Scalars['Boolean'];
  /** Update a project's metadata */
  updateProject: ResultObject;
  /** Updates a user's metadata about themselves. */
  updateUser: ResultObject;
}

export interface MutationCreateProjectArgs {
  input: CreateProjectInput;
}

export interface MutationCreateUserArgs {
  input: CreateUserInput;
}

export interface MutationDeleteProjectArgs {
  id: Scalars['String'];
}

export interface MutationLoginArgs {
  emailOrUser: Scalars['String'];
  password: Scalars['String'];
}

export interface MutationUpdateProjectArgs {
  input: UpdateProjectInput;
}

export interface MutationUpdateUserArgs {
  input: UpdateUserInput;
}

/** Represents a Project, linked to a User or Organization */
export interface Project {
  __typename?: 'Project';
  /** Returns a ISO8061 date on when this project was created. */
  createdAt: Scalars['String'];
  /** Returns the project description. */
  description?: Maybe<Scalars['String']>;
  /** Returns any Project flags as a bitfield. Refer to https://docs.arisu.land/#bitfield */
  flags: Scalars['Int'];
  /** Returns the unique identifier of this project. */
  id: Scalars['String'];
  /** Returns the project name. */
  name: Scalars['String'];
  /** Returns the owner's metadata. */
  owner?: Maybe<User>;
  /** Returns the owner of this Project. */
  ownerId: Scalars['String'];
  /** Returns a ISO8061 date on when the project was last updated. */
  updatedAt: Scalars['String'];
}

export interface Query {
  __typename?: 'Query';
  /** Returns a project from querying its name or UUID. */
  project?: Maybe<Project>;
  /** Returns the list of projects a user. */
  projects: Project[];
  test: Scalars['String'];
  /** Returns a user by their unique identifier or username. */
  user?: Maybe<User>;
}

export interface QueryProjectArgs {
  nameOrId: Scalars['String'];
}

export interface QueryProjectsArgs {
  userId: Scalars['String'];
}

export interface QueryUserArgs {
  id: Scalars['String'];
}

export interface ResultObject {
  __typename?: 'ResultObject';
  /** Returns the list of validation errors, if any. */
  errors?: Maybe<ErrorType[]>;
  /** Returns if the operation was successful or not. */
  success: Scalars['Boolean'];
}

/** Object for updating projects with the GraphQL API. */
export interface UpdateProjectInput {
  /** Sets the project's description, if any. */
  description?: Maybe<Scalars['String']>;
  /** The project UUID to update. */
  id: Scalars['String'];
  /** Sets the project's base language to use when translating. */
  language?: Maybe<Scalars['String']>;
  /** Sets the project's name. */
  name?: Maybe<Scalars['String']>;
}

export interface UpdateUserInput {
  /** Changes this user's description. */
  description?: Maybe<Scalars['String']>;
  /** Changes this user's email address. */
  email?: Maybe<Scalars['String']>;
  /** Changes this user's name. */
  name?: Maybe<Scalars['String']>;
  /** Changes this user's password. */
  password?: Maybe<Scalars['String']>;
  /** Changes this user's username. */
  username?: Maybe<Scalars['String']>;
}

/** Represents a User registered. */
export interface User {
  __typename?: 'User';
  /** Returns a ISO8601 date of when this user was registered. */
  createdAt: Scalars['String'];
  /** Returns the user's description about themselves. */
  description?: Maybe<Scalars['String']>;
  /** Returns any User flags as a bitfield. Refer to https://docs.arisu.land/#bitfield */
  flags: Scalars['Int'];
  /** Returns the unique identifier of this user. */
  id: Scalars['String'];
  /** Returns the user's name or it'll default to the username. */
  name?: Maybe<Scalars['String']>;
  /** Returns a ISO8601 date of when this user has last updated their profile. */
  updatedAt: Scalars['String'];
  /** Returns the user's username. You can preview their profile at https://arisu.land/~/<username>. */
  username: Scalars['String'];
}
